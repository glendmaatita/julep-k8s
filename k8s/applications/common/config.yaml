# kubectl -n staging apply -f config.yaml

---
apiVersion: v1
kind: Secret
metadata:
  name: security-secret
type: Opaque
data:
  JWT_SHARED_KEY: ""
  AGENTS_API_KEY: ""
  COZO_AUTH_TOKEN: ""
  LITELLM_MASTER_KEY: ""
  LITELLM_SALT_KEY: ""
  POSTGRESQL_USERNAME : "postgres"
  POSTGRESQL_PASSWORD: ""
  POSTGRESQL_REPLICATION_PASSWORD: ""
  POSTGRESQL_PORT: ""
  PGPOOL_ADMIN_USERNAME: ""
  PGPOOL_ADMIN_PASSWORD: ""
  REDIS_HOST: ""
  REDIS_PASSWORD: ""
  REDIS_PORT: ""

---

apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
type: Opaque
data:
  GF_SECURITY_ADMIN_USER: ""
  GF_SECURITY_ADMIN_PASSWORD: ""

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: memory-store-config
data:
  COZO_HOST: "http://memory-store:9070"
  COZO_PORT: "9070"
  COZO_ROCKSDB_DIR: "cozo.db"
  COZO_BACKUP_DIR: "/backup"
  COZO_MNT_DIR: "/data"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
data:
  GATEWAY_PORT: "80"
  TRAEFIK_LOG_LEVEL: "INFO"


---

apiVersion: v1
kind: ConfigMap
metadata:
  name: agents-api-config
data:
  AGENTS_API_HOSTNAME: "localhost"
  AGENTS_API_PROTOCOL: "http"
  AGENTS_API_KEY_HEADER_NAME: "Authorization"
  AGENTS_API_URL: "http://agents-api:8080"
  TRUNCATE_EMBED_TEXT: "true"
  WORKER_URL: "temporal:7233"
  AGENTS_API_DEBUG: "false"
  EMBEDDING_MODEL_ID: "Alibaba-NLP/gte-large-en-v1.5"
  SUMMARIZATION_MODEL_NAME: "gpt-4-turbo"
  NUM_GPUS: "1"
  INTEGRATION_SERVICE_URL: "http://integrations:8000"

---


apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-config
data:
  TEMPORAL_ENDPOINT: "temporal:7233"
  TEMPORAL_NAMESPACE: "default"
  TEMPORAL_WORKER_URL: "temporal:7233"
  TEMPORAL_POSTGRES_DB: "temporal"
  # TEMPORAL_POSTGRES_USER: "temporal"
  TEMPORAL_ADDRESS: "temporal:7233"
  TEMPORAL_CORS_ORIGINS: "http://localhost:3000"

  # additional config
  POSTGRES_SEEDS: "postgresql.postgresql"
  DB_HOST: "postgresql.postgresql"
  DB_PORT: "5432"
  POSTGRES_TLS_ENABLED: "false"
  POSTGRES_TLS_CA_FILE: "/cert/ca.crt"
  SQL_TLS_ENABLED: "false"
  SQL_CA: "/cert/ca.crt"
  POSTGRES_TLS_DISABLE_HOST_VERIFICATION: "false"
  VISIBILITY_DBNAME: "temporal_visibility"
  SKIP_SCHEMA_SETUP: "false"
  SKIP_DB_CREATE: "false"
  DYNAMIC_CONFIG_FILE_PATH: /etc/temporal/config/dynamicconfig/temporal-postgres.yaml
  DB: "postgres12"
  LOG_LEVEL: "info"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: temporal-postgres-config
data: |
  limit.maxIDLength:
    - value: 255
      constraints: {}
  system.forceSearchAttributesCacheRefreshOnRead:
    - value: false
      constraints: {}
---

apiVersion: v1
kind: Secret
metadata:
  name: litellm-secret
type: Opaque
data:
  OPENAI_API_KEY: ""
  HUGGING_FACE_HUB_TOKEN: ""
  ANTHROPIC_API_KEY: ""
  GROQ_API_KEY: ""
  CLOUDFLARE_API_KEY: ""
  CLOUDFLARE_ACCOUNT_ID: ""
  NVIDIA_NIM_API_KEY: ""
  GITHUB_API_KEY: ""
  VOYAGE_API_KEY: ""
  GOOGLE_APPLICATION_CREDENTIALS: ""

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: litellm-config
data:
  LITELLM_URL: "http://litellm:4000"
  LITELLM_POSTGRES_DB: "litellm"
  LITELLM_REDIS_HOST: "litellm-redis"
  LITELLM_REDIS_PORT: "6379"
  LITELLM_POSTGRES_SSLMODE: "prefer_ssl"
  config.yaml: |
  environment_variables:
  NO_DOCS: "true"

  model_list:
  # -*= Paid models =*-
  # -------------------

  # Gemini models
  - model_name: gemini-1.5-pro
    litellm_params:
      model: vertex_ai_beta/gemini-1.5-pro
      tags: ["paid"]
      vertex_credentials: os.environ/GOOGLE_APPLICATION_CREDENTIALS

  - model_name: claude-3.5-sonnet
    litellm_params:
      model: vertex_ai/claude-3-5-sonnet@20240620
      tags: ["paid"]
      vertex_credentials: os.environ/GOOGLE_APPLICATION_CREDENTIALS

  # OpenAI models
  - model_name: "gpt-4-turbo"
    litellm_params:
      model: "openai/gpt-4-turbo"
      tags: ["paid"]
      api_key: os.environ/OPENAI_API_KEY

  - model_name: "gpt-4o"
    litellm_params:
      model: "openai/gpt-4o"
      tags: ["paid"]
      api_key: os.environ/OPENAI_API_KEY

  # Anthropic models
  - model_name: "claude-3.5-sonnet"
    litellm_params:
      model: "claude-3-5-sonnet-20240620"
      tags: ["paid"]
      api_key: os.environ/ANTHROPIC_API_KEY

  - model_name: "claude-3-opus"
    litellm_params:
      model: "claude-3-opus-20240229"
      tags: ["paid"]
      api_key: os.environ/ANTHROPIC_API_KEY

  - model_name: "claude-3-sonnet"
    litellm_params:
      model: "claude-3-sonnet-20240229"
      tags: ["paid"]
      api_key: os.environ/ANTHROPIC_API_KEY

  - model_name: "claude-3-haiku"
    litellm_params:
      model: "claude-3-haiku-20240307"
      tags: ["paid"]
      api_key: os.environ/ANTHROPIC_API_KEY

  # Groq models
  - model_name: "llama-3.1-70b"
    litellm_params:
      model: "groq/llama-3.1-70b-versatile"
      tags: ["paid"]
      api_key: os.environ/GROQ_API_KEY

  - model_name: "llama-3.1-8b"
    litellm_params:
      model: "groq/llama-3.1-8b-instant"
      tags: ["paid"]
      api_key: os.environ/GROQ_API_KEY


  # -*= Embedding models =*-
  # ------------------------

  - model_name: text-embedding-3-large
    litellm_params:
      model: "openai/text-embedding-3-large"
      api_key: os.environ/OPENAI_API_KEY
      tags: ["paid"]

  - model_name: voyage-multilingual-2
    litellm_params:
      model: "voyage/voyage-multilingual-2"
      api_key: os.environ/VOYAGE_API_KEY
      tags: ["paid"]

  - model_name: voyage-3
    litellm_params:
      model: "voyage/voyage-3"
      api_key: os.environ/VOYAGE_API_KEY
      tags: ["paid"]

  - model_name: Alibaba-NLP/gte-large-en-v1.5
    litellm_params:
      model: openai/Alibaba-NLP/gte-large-en-v1.5
      api_base: http://text-embeddings-inference
      tags: ["free"]

  - model_name: BAAI/bge-m3
    litellm_params:
      model: openai/BAAI/bge-m3
      api_base: http://text-embeddings-inference
      tags: ["free"]

  - model_name: vertex_ai/text-embedding-004
    litellm_params:
      model: vertex_ai/text-embedding-004
      # vertex_project: os.environ/GOOGLE_PROJECT_ID
      # vertex_location: os.environ/VERTEX_LOCATION


  # -*= Free models =*-
  # -------------------

  - model_name: gpt-4o-mini
    litellm_params:
      model: openai/gpt-4o-mini
      api_key: os.environ/OPENAI_API_KEY
      tags: ["free"]


  # https://github.com/BerriAI/litellm/blob/main/litellm/__init__.py
  litellm_settings:
    num_retries: 3
    request_timeout: 180
    allowed_fails: 3
    cooldown_time: 30
    drop_params: true
    modify_params: true
    telemetry: false
    retry: true
    add_function_to_prompt: true

    set_verbose: false
    cache: true
    cache_params:        # set cache params for redis
      type: redis
      namespace: "litellm_caching"
      host: os.environ/LITELLM_REDIS_HOST
      port: os.environ/LITELLM_REDIS_PORT
      password: os.environ/LITELLM_REDIS_PASSWORD

  router_settings:
    routing_strategy: simple-shuffle
    num_retries: 3

  general_settings:
    master_key: os.environ/LITELLM_MASTER_KEY
    database_url: os.environ/LITELLM_DATABASE_URL
    enforce_user_param: true

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: monitoring-config
data:
  datasource.yml: |
    apiVersion: 1

    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090 
      isDefault: true
      access: proxy
      editable: true

  prometheus.yml: |
    global:
      scrape_interval: 5s
      scrape_timeout: 3s
      evaluation_interval: 5s
    alerting:
      alertmanagers:
        - static_configs:
            - targets: []
          scheme: http
          timeout: 3s
          api_version: v1
    scrape_configs:
      - job_name: traefik
        honor_timestamps: true
        scrape_interval: 5s
        scrape_timeout: 3s
        metrics_path: /metrics
        scheme: http
        static_configs:
          - targets:
              - gateway:8082

